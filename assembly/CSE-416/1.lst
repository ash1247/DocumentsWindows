     1                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     2                                  ;;
     3                                  ;;
     4                                  ;   Run: nasm -f elf64 -g -F dwarf 1.asm -l 1.lst
     5                                  ;        ld -o 1 1.o
     6                                  ;
     7                                  ;       A program to read a char from keyboard and display it
     8                                  ;
     9                                  ;
    10                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    11                                  section .bss                       ; uninitialized data
    12 00000000 <res 00000010>                  char resb 16
    13                                  
    14                                  section .data                      ;Section containing data
    15                                  
    16 00000000 2A                              star: db "*"  
    17                                          starL equ $-star           ; Count Length of msg1
    18                                          
    19 00000001 0A                              newLine: db "",10              ; newLine 
    20                                          newLL equ $-newLine        ; newLine length
    21                                          
    22                                  section .text                      ; section containing code
    23                                  
    24                                  global _start                      ;linker initialized
    25                                  
    26                                  _start:                            ;entry point for linker
    27 00000000 90                              nop                        ; For debugger
    28                                          
    29 00000001 BD14000000                      mov ebp, 20
    30                                          ; Output
    31 00000006 B804000000              Loop:   mov eax, 4                 ; initialize wr sys_call 
    32 0000000B BB01000000                      mov ebx, 1                 
    33 00000010 B9[00000000]                    mov ecx, star              ; Pass offset of the msg
    34 00000015 BA01000000                      mov edx, starL           ; Pass the length of msg 
    35 0000001A CD80                            int 80h                    ; Make kernel call,
    36 0000001C FFCD                            dec ebp                     ; 21h for windows, 80h                  
    37 0000001E 75E6                            jnz Loop                            ;for linux        
    38                                         
    39                                         ; add new line
    40 00000020 B804000000                      mov eax, 4                 ; initialize wr sys_call
    41 00000025 BB01000000                      mov ebx, 1                 ;
    42 0000002A B9[01000000]                    mov ecx, newLine           ; add newLine
    43 0000002F BA01000000                      mov edx, newLL             ; length of newLine
    44 00000034 CD80                            int 80h
    45                                  
    46                                          ; Exit
    47 00000036 B801000000                      mov eax, 1                 ; Exit sys_call
    48 0000003B BB00000000                      mov ebx, 0                 ; Return a code for zero
    49 00000040 CD80                            int 80h                    ; Make kernel call 
