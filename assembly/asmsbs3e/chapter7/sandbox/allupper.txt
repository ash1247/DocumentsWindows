;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; EXECUTABLE NAME : UPPERCASE 2
; VERSION: 1.0
; CREATED DATE: 15.01.2018
; LAST UPDATE: 16.01.2018
; AUTHOR     : @$#1247
; DESCRIPTION: A SIMPLE PROGRAM IN ASSEMBLY FOR LINUX, USING NASM
;              2.13.01, DEMONSTRATING SIMPLE TEXT FILE TO A BUFFER IN 
;              BLOCKS, FORCING LOWERCASE CHARACTERS TO UPPERCASE, AND
;              WRITING THE MODIFIED BUFFER TO AN OUTPUT FILE.
;
; USE: ./FILENAME > OUTPUT_FILE < INPUT_FILE
;
; BUILD: NASM -F ELF64 -G -F DWARF FILENAME.ASM
;        LD -O FILENAME FILENAME.O
;                           
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

SECTION .BSS            ; SECTION CONTAINING UNINITIALIZED DATA
    
    BUFFLEN EQU 1024
    BUFF:   RESB BUFFLEN

SECTION .DATA           ; SECTION CONTAINING INITIALIZED DATA

SECTION .TEXT           ; SECTION CONTAINING CODE

GLOBAL _START           ; LINKER FOR ENTRY POINT

_START:
        NOP              ; FOR DEBUGGER

; READ A BUFFER FULL OF TEXT FROM STDIN
READ:
        MOV EAX, 3      ; SPECIFY SYS_READ CALL
        MOV EBX, 0      ; SPECIFY FILE DESCRIPTOR 0, STANDARD INPUT
        MOV ECX, BUFF   ; PASS OFFSET OF THE BUFFER TO READ TO
        MOV EDX, BUFFLEN ; PASS NUMBER OF BYTES TO READ ONE PASS
        INT 80H         ; COPY SYS_READ TO FILL THE BUFFER
        MOV ESI, EAX     ; COPY SYS_READ RETURN VALUE FOR SAFEKEEPING
        CMP EAX, 0       ; IF EAX=0, SYS_READ REACHED ON EOF ON STDIN
        JE DONE          ; JUMP IF EQUAL (TO 0, FROM COMPARE)
        
; SET UP THE REGISTER FOR THE PRECESS BUFFER STEP:
        MOV ECX, ESI     ; PLACE THE NUMBER OF BYTES READ INTO ECX
        MOV EBP, BUFF    ; PLACE ADDRESS OF BUFFER INTO EBP
        DEC EBP          ; ADJUST COUNT TO OFFSET
        
; GO THROUGH THE BUFFER AND CONVERT LOWERCASE TO UPPERCASE CHARACTERS:

SCAN:   
        CMP BYTE [EBP+ECX], 61H ; TEST INPUT CHAR AGAINST LOWERCASE 'A'
        JB NEXT                 ; IF BELOW 'A' IN ASCII, NOT LOWERCASE
        CMP BYTE [EBP+ECX], 7AH ; TEST INPUT CHAR AGAINST LOWERCASE 'Z'
        JA NEXT                 ; IF ABOVE 'Z' IN ASCII, NOT LOWERCASE
        
        SUB BYTE [EBP+ECX], 20H ; SUBTRACT 20H TO GIVE UPPERCASE
NEXT:   DEC ECX                 ; DECREMENT COUNTER
        JNZ SCAN                ; IF CHARACTERS REMAIN, LOOP BACK
        
; WRITE THE BUFFER FULL OF PROCESSED TEXT TO STDOUT:

WRITE:
        MOV EAX, 4              ; SPECIFY SYS_WRITE CALL
        MOV EBX, 1              ; MOV EBX, 1
        MOV ECX, BUFF           ; PASS OFFSET OF THE BUFFER
        MOV EDX, ESI            ; PASS THE # OF BYTES OF DATA IN BUFFER
        INT 80H                 ; MAKE SYS_WRITE KERNEL CALL
        JMP READ                ; LOOP BACK AND LOAD ANOTHER BUFFR FULL
        
DONE:   MOV EAX, 1              ; CODE FOR EXIT SYSCALL
        MOV EBX, 0              ; RETURN A CODE OF ZERO
        INT 80H                 ; MAKE SYS_EXIT KERNEL CALL
        
